name: Quality Gates

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  quality-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy pytest pytest-cov bandit safety
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Code Formatting Check (Black)
      run: |
        black --check --diff .
    
    - name: Import Sorting Check (isort)
      run: |
        isort --check-only --diff .
    
    - name: Lint with flake8
      run: |
        flake8 *.py --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 *.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type Check with mypy
      run: |
        mypy . --ignore-missing-imports || true
    
    - name: Security Check with bandit
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -ll
    
    - name: Dependency Security Check
      run: |
        safety check --json --output safety-report.json || true
        safety check
    
    - name: Run Tests
      run: |
        pytest -v --cov=. --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint radon xenon
    
    - name: Pylint Analysis
      run: |
        pylint --output-format=json --reports=y *.py > pylint-report.json || true
        pylint *.py --score=y
    
    - name: Complexity Analysis
      run: |
        radon cc . --min B --show-complexity
        xenon . --max-absolute B --max-modules A --max-average A
    
    - name: Upload quality reports
      uses: actions/upload-artifact@v4
      with:
        name: quality-reports
        path: |
          pylint-report.json
          bandit-report.json
          safety-report.json
        retention-days: 30

